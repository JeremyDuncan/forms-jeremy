{"ast":null,"code":"var _jsxFileName = \"/Users/jeremyduncan/repos/LearnAcademy/javascript-practice/react-challenges/forms-jeremy/src/App.js\";\n// Challenge: Mad Libs\n// As a developer, I have been tasked with recreating the children's game Mad Libs as an app. Mad Libs requires the user to supply a series of random words that match the part of speech as indicated. When all the words have been supplied, the user can see their words added to a pre-written story. Hilarity ensues.\n// Mad Libs\n// As a user, I can see a page with many text inputs.\n// As a user, I can see labels next to the text inputs indicating what part of speech (or type of word) should be entered into each text form: nouns, pronouns, verbs, adjectives, and adjectives.\n// As a user, I can fill out the inputs.\n// As a user, after I have filled out the text inputs I can click a 'Submit' button.\n// As a user, when I click 'Submit' I see a paragraph appear on the page that contains the words I entered in the text forms to create a funny story.\nimport './App.css';\nimport React, { Component } from 'react';\nimport Form from './components/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFormSubmit = formData => {\n      this.setState({\n        form: formData\n      });\n    };\n\n    this.state = {\n      form: {}\n    };\n  }\n\n  render() {\n    {\n      this.noun1 = this.state.form.noun1;\n    }\n    {\n      this.noun2 = this.state.form.noun2;\n    }\n    {\n      this.noun3 = this.state.form.noun3;\n    }\n    {\n      this.noun4 = this.state.form.noun4;\n    }\n    {\n      this.verb1 = this.state.form.verb1;\n    }\n    {\n      this.verb2 = this.state.form.verb2;\n    }\n    {\n      this.adjective1 = this.state.form.adjective1;\n    }\n    {\n      this.adjective2 = this.state.form.adjective2;\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        handleFormSubmit: this.handleFormSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), this.state.form && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"noun: \", this.noun1 + \" \", \"noun: \", this.noun3 + \" \", \"noun: \", this.noun4 + \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), \"verb: \", this.verb1 + \" \", \"verb: \", this.verb2 + \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), \"adjective: \", this.adjective1 + \" \", \"adjective: \", this.adjective2 + \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Component","Form","App","constructor","props","handleFormSubmit","formData","setState","form","state","render","noun1","noun2","noun3","noun4","verb1","verb2","adjective1","adjective2"],"sources":["/Users/jeremyduncan/repos/LearnAcademy/javascript-practice/react-challenges/forms-jeremy/src/App.js"],"sourcesContent":["// Challenge: Mad Libs\n// As a developer, I have been tasked with recreating the children's game Mad Libs as an app. Mad Libs requires the user to supply a series of random words that match the part of speech as indicated. When all the words have been supplied, the user can see their words added to a pre-written story. Hilarity ensues.\n\n// Mad Libs\n\n// As a user, I can see a page with many text inputs.\n// As a user, I can see labels next to the text inputs indicating what part of speech (or type of word) should be entered into each text form: nouns, pronouns, verbs, adjectives, and adjectives.\n// As a user, I can fill out the inputs.\n// As a user, after I have filled out the text inputs I can click a 'Submit' button.\n// As a user, when I click 'Submit' I see a paragraph appear on the page that contains the words I entered in the text forms to create a funny story.\n\nimport './App.css';\nimport React, { Component } from 'react'\nimport Form from './components/Form'\nclass App extends Component {\n  constructor(props) {\n    super(props) \n    this.state = {\n      form: {}\n    }\n  }\n\n\n  handleFormSubmit = (formData) => {\n    this.setState({ form: formData });\n  };\n\n  render(){\n    {this.noun1 = this.state.form.noun1}\n    {this.noun2 = this.state.form.noun2}\n    {this.noun3 = this.state.form.noun3}\n    {this.noun4 = this.state.form.noun4}\n\n    {this.verb1 = this.state.form.verb1}\n    {this.verb2 = this.state.form.verb2}\n\n    {this.adjective1 = this.state.form.adjective1}\n    {this.adjective2 = this.state.form.adjective2}\n\n    return(\n      <div>\n        \n        <Form handleFormSubmit={ this.handleFormSubmit } />\n            { this.state.form &&\n              <div>\n                \n                noun: {this.noun1 + \" \"}\n                noun: {this.noun3 + \" \"}\n                noun: {this.noun4 + \" \"}\n                <br />\n                verb: { this.verb1 + \" \"}\n                verb: { this.verb2 + \" \"}\n                <br />\n                adjective: { this.adjective1 + \" \"}\n                adjective: { this.adjective2 + \" \" }\n              </div>\n            }\n      </div>\n    )\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;AACA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;EAC1BG,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;;IADiB,KAQnBC,gBARmB,GAQCC,QAAD,IAAc;MAC/B,KAAKC,QAAL,CAAc;QAAEC,IAAI,EAAEF;MAAR,CAAd;IACD,CAVkB;;IAEjB,KAAKG,KAAL,GAAa;MACXD,IAAI,EAAE;IADK,CAAb;EAGD;;EAODE,MAAM,GAAE;IACN;MAAC,KAAKC,KAAL,GAAa,KAAKF,KAAL,CAAWD,IAAX,CAAgBG,KAA7B;IAAmC;IACpC;MAAC,KAAKC,KAAL,GAAa,KAAKH,KAAL,CAAWD,IAAX,CAAgBI,KAA7B;IAAmC;IACpC;MAAC,KAAKC,KAAL,GAAa,KAAKJ,KAAL,CAAWD,IAAX,CAAgBK,KAA7B;IAAmC;IACpC;MAAC,KAAKC,KAAL,GAAa,KAAKL,KAAL,CAAWD,IAAX,CAAgBM,KAA7B;IAAmC;IAEpC;MAAC,KAAKC,KAAL,GAAa,KAAKN,KAAL,CAAWD,IAAX,CAAgBO,KAA7B;IAAmC;IACpC;MAAC,KAAKC,KAAL,GAAa,KAAKP,KAAL,CAAWD,IAAX,CAAgBQ,KAA7B;IAAmC;IAEpC;MAAC,KAAKC,UAAL,GAAkB,KAAKR,KAAL,CAAWD,IAAX,CAAgBS,UAAlC;IAA6C;IAC9C;MAAC,KAAKC,UAAL,GAAkB,KAAKT,KAAL,CAAWD,IAAX,CAAgBU,UAAlC;IAA6C;IAE9C,oBACE;MAAA,wBAEE,QAAC,IAAD;QAAM,gBAAgB,EAAG,KAAKb;MAA9B;QAAA;QAAA;QAAA;MAAA,QAFF,EAGQ,KAAKI,KAAL,CAAWD,IAAX,iBACA;QAAA,qBAES,KAAKG,KAAL,GAAa,GAFtB,YAGS,KAAKE,KAAL,GAAa,GAHtB,YAIS,KAAKC,KAAL,GAAa,GAJtB,eAKE;UAAA;UAAA;UAAA;QAAA,QALF,YAMU,KAAKC,KAAL,GAAa,GANvB,YAOU,KAAKC,KAAL,GAAa,GAPvB,eAQE;UAAA;UAAA;UAAA;QAAA,QARF,iBASe,KAAKC,UAAL,GAAkB,GATjC,iBAUe,KAAKC,UAAL,GAAkB,GAVjC;MAAA;QAAA;QAAA;QAAA;MAAA,QAJR;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAoBD;;AA7CyB;;AAgD5B,eAAehB,GAAf"},"metadata":{},"sourceType":"module"}