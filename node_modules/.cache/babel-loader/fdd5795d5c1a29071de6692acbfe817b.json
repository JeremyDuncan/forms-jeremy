{"ast":null,"code":"var _jsxFileName = \"/Users/jeremyduncan/repos/LearnAcademy/javascript-practice/react-challenges/forms-jeremy/src/App.js\";\n// Challenge: Mad Libs\n// As a developer, I have been tasked with recreating the children's game Mad Libs as an app. Mad Libs requires the user to supply a series of random words that match the part of speech as indicated. When all the words have been supplied, the user can see their words added to a pre-written story. Hilarity ensues.\n// Mad Libs\n// As a user, I can see a page with many text inputs.\n// As a user, I can see labels next to the text inputs indicating what part of speech (or type of word) should be entered into each text form: nouns, pronouns, verbs, adjectives, and adjectives.\n// As a user, I can fill out the inputs.\n// As a user, after I have filled out the text inputs I can click a 'Submit' button.\n// As a user, when I click 'Submit' I see a paragraph appear on the page that contains the words I entered in the text forms to create a funny story.\nimport './App.css';\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      noun: [1, 2, 3, 4, 5],\n      verb: [1, 2, 3, 4],\n      adjective: [1, 2, 3, 4, 5]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Noun\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.noun[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Noun\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.noun[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Noun\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.noun[2]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Noun\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.noun[3]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Verb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.verb[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Verb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.verb[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Adjective\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.adjective[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Adjective\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.adjective[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit Form\",\n          onClick: this.handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Component","App","constructor","props","state","noun","verb","adjective","render","handleSubmit"],"sources":["/Users/jeremyduncan/repos/LearnAcademy/javascript-practice/react-challenges/forms-jeremy/src/App.js"],"sourcesContent":["// Challenge: Mad Libs\n// As a developer, I have been tasked with recreating the children's game Mad Libs as an app. Mad Libs requires the user to supply a series of random words that match the part of speech as indicated. When all the words have been supplied, the user can see their words added to a pre-written story. Hilarity ensues.\n\n// Mad Libs\n\n// As a user, I can see a page with many text inputs.\n// As a user, I can see labels next to the text inputs indicating what part of speech (or type of word) should be entered into each text form: nouns, pronouns, verbs, adjectives, and adjectives.\n// As a user, I can fill out the inputs.\n// As a user, after I have filled out the text inputs I can click a 'Submit' button.\n// As a user, when I click 'Submit' I see a paragraph appear on the page that contains the words I entered in the text forms to create a funny story.\n\nimport './App.css';\nimport React, { Component } from 'react'\n\nclass App extends Component {\n  constructor(props) {\n    super(props) \n    this.state = {\n      noun: [1, 2, 3, 4, 5],\n      verb:[1, 2, 3, 4],\n      adjective:[1, 2, 3, 4, 5]\n    }\n  }\n\n  render(){\n    return(\n      <div className=\"App\">\n\n        <React.Fragment>\n          <form>\n            <label>Noun</label>\n            <input  \n              type=\"text\" \n              value={this.state.noun[0]}\n            />\n            <br/>\n            <label>Noun</label>\n            <input \n              type=\"text\" \n              value={this.state.noun[1]} \n            />\n            <br/>\n            <label>Noun</label>\n            <input \n              type=\"text\" \n              value={this.state.noun[2]} \n            />\n            <br/>\n            <label>Noun</label>\n            <input \n              type=\"text\" \n              value={this.state.noun[3]} \n            />\n\n            <br/>\n            <label>Verb</label>\n            <input \n              type=\"text\" \n              value={this.state.verb[0]} \n            />\n            <br/>\n            <label>Verb</label>\n            <input \n              type=\"text\" \n              value={this.state.verb[1]} \n            />\n\n            <br/>\n            <label>Adjective</label>\n            <input \n              type=\"text\" \n              value={this.state.adjective[0]} \n            />\n            <br/>\n            <label>Adjective</label>\n            <input \n              type=\"text\" \n              value={this.state.adjective[1]} \n            />\n          </form>\n\n          <input\n            type=\"submit\"\n            value=\"Submit Form\"\n            onClick={ this.handleSubmit }\n          />\n        </React.Fragment>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}