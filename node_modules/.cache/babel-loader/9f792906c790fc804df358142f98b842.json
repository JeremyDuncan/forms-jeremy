{"ast":null,"code":"import _classCallCheck from\"/Users/jeremyduncan/repos/LearnAcademy/javascript-practice/react-challenges/forms-jeremy/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/jeremyduncan/repos/LearnAcademy/javascript-practice/react-challenges/forms-jeremy/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/jeremyduncan/repos/LearnAcademy/javascript-practice/react-challenges/forms-jeremy/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/jeremyduncan/repos/LearnAcademy/javascript-practice/react-challenges/forms-jeremy/node_modules/@babel/runtime/helpers/esm/createSuper.js\";// Challenge: Mad Libs\n// As a developer, I have been tasked with recreating the children's game Mad Libs as an app. Mad Libs requires the user to supply a series of random words that match the part of speech as indicated. When all the words have been supplied, the user can see their words added to a pre-written story. Hilarity ensues.\n// Mad Libs\n// As a user, I can see a page with many text inputs.\n// As a user, I can see labels next to the text inputs indicating what part of speech (or type of word) should be entered into each text form: nouns, pronouns, verbs, adjectives, and adjectives.\n// As a user, I can fill out the inputs.\n// As a user, after I have filled out the text inputs I can click a 'Submit' button.\n// As a user, when I click 'Submit' I see a paragraph appear on the page that contains the words I entered in the text forms to create a funny story.\nimport'./App.css';import React,{Component}from'react';import Form from'./components/Form';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.handleFormSubmit=function(formData){_this.setState({form:formData});};_this.state={form:{noun1:\"_____\",noun2:\"_____\",noun3:\"_____\",noun4:\"_____\",verb1:\"_____\",verb2:\"_____\",adjective1:\"_____\",adjective2:\"_____\"}};return _this;}_createClass(App,[{key:\"render\",value:function render(){{this.noun1=this.state.form.noun1;}{this.noun2=this.state.form.noun2;}{this.noun3=this.state.form.noun3;}{this.noun4=this.state.form.noun4;}{this.verb1=this.state.form.verb1;}{this.verb2=this.state.form.verb2;}{this.adjective1=this.state.form.adjective1;}{this.adjective2=this.state.form.adjective2;}return/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"title\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Mad Libs\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"left\",children:/*#__PURE__*/_jsx(Form,{handleFormSubmit:this.handleFormSubmit})}),this.state.form&&/*#__PURE__*/_jsxs(\"div\",{className:\"right\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"A \",this.noun1,\" \",this.verb1,\" around the \",this.adjective1,\" \",this.noun2,\" and \",this.verb2,\"  up the street and gossiped with Mrs. Bilbo about \",this.adjective2,\" \",this.noun3,\"'s \",this.noun4,\".\"]})}),/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsx(\"button\",{className:\"shadow butt\",onClick:function onClick(){return window.location.reload();},children:\"Clear\"})})]})]})]})});}}]);return App;}(Component);export default App;","map":{"version":3,"names":["React","Component","Form","App","props","handleFormSubmit","formData","setState","form","state","noun1","noun2","noun3","noun4","verb1","verb2","adjective1","adjective2","window","location","reload"],"sources":["/Users/jeremyduncan/repos/LearnAcademy/javascript-practice/react-challenges/forms-jeremy/src/App.js"],"sourcesContent":["// Challenge: Mad Libs\n// As a developer, I have been tasked with recreating the children's game Mad Libs as an app. Mad Libs requires the user to supply a series of random words that match the part of speech as indicated. When all the words have been supplied, the user can see their words added to a pre-written story. Hilarity ensues.\n\n// Mad Libs\n\n// As a user, I can see a page with many text inputs.\n// As a user, I can see labels next to the text inputs indicating what part of speech (or type of word) should be entered into each text form: nouns, pronouns, verbs, adjectives, and adjectives.\n// As a user, I can fill out the inputs.\n// As a user, after I have filled out the text inputs I can click a 'Submit' button.\n// As a user, when I click 'Submit' I see a paragraph appear on the page that contains the words I entered in the text forms to create a funny story.\n\nimport './App.css';\nimport React, { Component } from 'react'\nimport Form from './components/Form'\nclass App extends Component {\n  constructor(props) {\n    super(props) \n    this.state = {\n      form: {\n        noun1: \"_____\",\n        noun2: \"_____\",\n        noun3: \"_____\",\n        noun4: \"_____\",\n        verb1: \"_____\",\n        verb2: \"_____\",\n        adjective1: \"_____\",\n        adjective2: \"_____\"\n      }\n    }\n  }\n\n  handleFormSubmit = (formData) => {\n    this.setState({ form: formData });\n  };\n\n  render(){\n    {this.noun1 = this.state.form.noun1}\n    {this.noun2 = this.state.form.noun2}\n    {this.noun3 = this.state.form.noun3}\n    {this.noun4 = this.state.form.noun4}\n\n    {this.verb1 = this.state.form.verb1}\n    {this.verb2 = this.state.form.verb2}\n\n    {this.adjective1 = this.state.form.adjective1}\n    {this.adjective2 = this.state.form.adjective2}\n\n    return(\n      <div className=\"container\">\n        <div className=\"title\">\n          <h1>Mad Libs</h1>\n          <div className=\"center\">\n            <div className=\"left\">\n              <Form handleFormSubmit={ this.handleFormSubmit } />\n            </div>\n              { this.state.form &&\n                <div className=\"right\">\n                  <div className=\"text\">\n                    <p> \n                      A {this.noun1} {this.verb1} around the {this.adjective1} {this.noun2} and {this.verb2}  up the street and gossiped with Mrs. Bilbo about {this.adjective2} {this.noun3}'s {this.noun4}. \n                    </p>\n                  </div>\n                  <div className=\"App\">\n                    <button className=\"shadow butt\" onClick={() => window.location.reload()}>Clear</button>\n                  </div>\n                </div>\n                }\n              </div>\n            </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"],"mappings":"wqBAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA,MAAO,WAAP,CACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,IAAP,KAAiB,mBAAjB,C,2FACMC,CAAAA,G,0FACJ,aAAYC,KAAZ,CAAmB,qCACjB,uBAAMA,KAAN,EADiB,MAgBnBC,gBAhBmB,CAgBA,SAACC,QAAD,CAAc,CAC/B,MAAKC,QAAL,CAAc,CAAEC,IAAI,CAAEF,QAAR,CAAd,EACD,CAlBkB,CAEjB,MAAKG,KAAL,CAAa,CACXD,IAAI,CAAE,CACJE,KAAK,CAAE,OADH,CAEJC,KAAK,CAAE,OAFH,CAGJC,KAAK,CAAE,OAHH,CAIJC,KAAK,CAAE,OAJH,CAKJC,KAAK,CAAE,OALH,CAMJC,KAAK,CAAE,OANH,CAOJC,UAAU,CAAE,OAPR,CAQJC,UAAU,CAAE,OARR,CADK,CAAb,CAFiB,aAclB,C,sCAMD,iBAAQ,CACN,CAAC,KAAKP,KAAL,CAAa,KAAKD,KAAL,CAAWD,IAAX,CAAgBE,KAA7B,CAAmC,CACpC,CAAC,KAAKC,KAAL,CAAa,KAAKF,KAAL,CAAWD,IAAX,CAAgBG,KAA7B,CAAmC,CACpC,CAAC,KAAKC,KAAL,CAAa,KAAKH,KAAL,CAAWD,IAAX,CAAgBI,KAA7B,CAAmC,CACpC,CAAC,KAAKC,KAAL,CAAa,KAAKJ,KAAL,CAAWD,IAAX,CAAgBK,KAA7B,CAAmC,CAEpC,CAAC,KAAKC,KAAL,CAAa,KAAKL,KAAL,CAAWD,IAAX,CAAgBM,KAA7B,CAAmC,CACpC,CAAC,KAAKC,KAAL,CAAa,KAAKN,KAAL,CAAWD,IAAX,CAAgBO,KAA7B,CAAmC,CAEpC,CAAC,KAAKC,UAAL,CAAkB,KAAKP,KAAL,CAAWD,IAAX,CAAgBQ,UAAlC,CAA6C,CAC9C,CAAC,KAAKC,UAAL,CAAkB,KAAKR,KAAL,CAAWD,IAAX,CAAgBS,UAAlC,CAA6C,CAE9C,mBACE,YAAK,SAAS,CAAC,WAAf,uBACE,aAAK,SAAS,CAAC,OAAf,wBACE,gCADF,cAEE,aAAK,SAAS,CAAC,QAAf,wBACE,YAAK,SAAS,CAAC,MAAf,uBACE,KAAC,IAAD,EAAM,gBAAgB,CAAG,KAAKZ,gBAA9B,EADF,EADF,CAIM,KAAKI,KAAL,CAAWD,IAAX,eACA,aAAK,SAAS,CAAC,OAAf,wBACE,YAAK,SAAS,CAAC,MAAf,uBACE,0BACK,KAAKE,KADV,KACkB,KAAKI,KADvB,gBAC0C,KAAKE,UAD/C,KAC4D,KAAKL,KADjE,SAC6E,KAAKI,KADlF,uDAC4I,KAAKE,UADjJ,KAC8J,KAAKL,KADnK,OAC6K,KAAKC,KADlL,OADF,EADF,cAME,YAAK,SAAS,CAAC,KAAf,uBACE,eAAQ,SAAS,CAAC,aAAlB,CAAgC,OAAO,CAAE,yBAAMK,CAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAAN,EAAzC,mBADF,EANF,GALN,GAFF,GADF,EADF,CAwBD,C,iBAzDenB,S,EA4DlB,cAAeE,CAAAA,GAAf"},"metadata":{},"sourceType":"module"}