{"ast":null,"code":"var _jsxFileName = \"/Users/jeremyduncan/repos/LearnAcademy/javascript-practice/react-challenges/forms-jeremy/src/App.js\";\n// Challenge: Mad Libs\n// As a developer, I have been tasked with recreating the children's game Mad Libs as an app. Mad Libs requires the user to supply a series of random words that match the part of speech as indicated. When all the words have been supplied, the user can see their words added to a pre-written story. Hilarity ensues.\n// Mad Libs\n// As a user, I can see a page with many text inputs.\n// As a user, I can see labels next to the text inputs indicating what part of speech (or type of word) should be entered into each text form: nouns, pronouns, verbs, adjectives, and adjectives.\n// As a user, I can fill out the inputs.\n// As a user, after I have filled out the text inputs I can click a 'Submit' button.\n// As a user, when I click 'Submit' I see a paragraph appear on the page that contains the words I entered in the text forms to create a funny story.\nimport './App.css';\nimport React, { Component } from 'react';\nimport Form from './components/Form';\nimport MadLib from './components/MadLib';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFormSubmit = formData => {\n      this.setState({\n        form: formData\n      });\n    };\n\n    this.state = {\n      form: {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        handleFormSubmit: this.handleFormSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), this.state.form && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"noun: \", this.state.form.noun1, /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Type of pet: \", this.state.form.petType]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Pet age: \", this.state.form.petAge]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Component","Form","MadLib","App","constructor","props","handleFormSubmit","formData","setState","form","state","render","noun1","petType","petAge"],"sources":["/Users/jeremyduncan/repos/LearnAcademy/javascript-practice/react-challenges/forms-jeremy/src/App.js"],"sourcesContent":["// Challenge: Mad Libs\n// As a developer, I have been tasked with recreating the children's game Mad Libs as an app. Mad Libs requires the user to supply a series of random words that match the part of speech as indicated. When all the words have been supplied, the user can see their words added to a pre-written story. Hilarity ensues.\n\n// Mad Libs\n\n// As a user, I can see a page with many text inputs.\n// As a user, I can see labels next to the text inputs indicating what part of speech (or type of word) should be entered into each text form: nouns, pronouns, verbs, adjectives, and adjectives.\n// As a user, I can fill out the inputs.\n// As a user, after I have filled out the text inputs I can click a 'Submit' button.\n// As a user, when I click 'Submit' I see a paragraph appear on the page that contains the words I entered in the text forms to create a funny story.\n\nimport './App.css';\nimport React, { Component } from 'react'\nimport Form from './components/Form'\nimport MadLib from './components/MadLib'\nclass App extends Component {\n  constructor(props) {\n    super(props) \n    this.state = {\n      form: {}\n    }\n  }\n  \n  handleFormSubmit = (formData) => {\n    \n    this.setState({ form: formData });\n  };\n\n\n  render(){\n    return(\n      <div className=\"App-header\">\n\n        <Form handleFormSubmit={ this.handleFormSubmit } />\n            { this.state.form &&\n              <div>\n                noun: { this.state.form.noun1 }\n                <p>Type of pet: { this.state.form.petType}</p>\n                <p>Pet age: { this.state.form.petAge }</p>\n              </div>\n            }\n      </div>\n    )\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AACA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;EAC1BI,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;;IADiB,KAOnBC,gBAPmB,GAOCC,QAAD,IAAc;MAE/B,KAAKC,QAAL,CAAc;QAAEC,IAAI,EAAEF;MAAR,CAAd;IACD,CAVkB;;IAEjB,KAAKG,KAAL,GAAa;MACXD,IAAI,EAAE;IADK,CAAb;EAGD;;EAQDE,MAAM,GAAE;IACN,oBACE;MAAK,SAAS,EAAC,YAAf;MAAA,wBAEE,QAAC,IAAD;QAAM,gBAAgB,EAAG,KAAKL;MAA9B;QAAA;QAAA;QAAA;MAAA,QAFF,EAGQ,KAAKI,KAAL,CAAWD,IAAX,iBACA;QAAA,qBACU,KAAKC,KAAL,CAAWD,IAAX,CAAgBG,KAD1B,eAEE;UAAA,4BAAkB,KAAKF,KAAL,CAAWD,IAAX,CAAgBI,OAAlC;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE;UAAA,wBAAc,KAAKH,KAAL,CAAWD,IAAX,CAAgBK,MAA9B;QAAA;UAAA;UAAA;UAAA;QAAA,QAHF;MAAA;QAAA;QAAA;QAAA;MAAA,QAJR;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAaD;;AA5ByB;;AA+B5B,eAAeX,GAAf"},"metadata":{},"sourceType":"module"}